# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2017-06-27 12:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('vocabs', '0001_initial'),
        ('bib', '0001_initial'),
        ('places', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legacy_id', models.CharField(blank=True, max_length=300, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=300, verbose_name='Dateiname')),
                ('entry_order', models.CharField(blank=True, max_length=300, verbose_name='Ordnungskriterium/Eingabe')),
                ('date_analogue', models.CharField(blank=True, max_length=300, verbose_name='Analoges Datum')),
                ('date_digitization', models.DateField(blank=True, null=True, verbose_name='Datum der Digitalisierung')),
                ('note', models.TextField(blank=True, verbose_name='Anmerkung')),
                ('content', models.TextField(blank=True, verbose_name='Inhalt')),
                ('combination', models.CharField(blank=True, max_length=300, verbose_name='Kombination')),
                ('location_id', models.CharField(blank=True, max_length=300, verbose_name='Fundnummer in FDB')),
                ('location_digitized_object', models.CharField(blank=True, max_length=300, verbose_name='Aufbewahrung Datei')),
                ('location_analogue', models.CharField(blank=True, max_length=300, verbose_name='Standort analog')),
                ('filesize', models.FloatField(blank=True, null=True, verbose_name='Dateigröße KB')),
                ('path', models.CharField(blank=True, max_length=300, verbose_name='Dateipfad')),
                ('amendments', models.TextField(blank=True, verbose_name='Ergänzungen')),
                ('analogue_format', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analogue_format', to='vocabs.SkosConcept', verbose_name='Analoges Format')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=300)),
                ('abbreviation', models.CharField(blank=True, max_length=300)),
                ('identifier', models.CharField(blank=True, max_length=300)),
                ('parent_institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documents.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forename', models.CharField(blank=True, max_length=300)),
                ('name', models.CharField(blank=True, max_length=300)),
                ('identifier', models.CharField(blank=True, max_length=300)),
                ('institution', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documents.Institution')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='author',
            field=models.ManyToManyField(blank=True, related_name='author', to='documents.Person', verbose_name='Autor'),
        ),
        migrations.AddField(
            model_name='document',
            name='curator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='documents.Person', verbose_name='Bearbeiter Digitalisierung'),
        ),
        migrations.AddField(
            model_name='document',
            name='digital_format',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='digital_format', to='vocabs.SkosConcept', verbose_name='Speicherformat'),
        ),
        migrations.AddField(
            model_name='document',
            name='institution',
            field=models.ManyToManyField(blank=True, related_name='institution_document', to='documents.Institution', verbose_name='Institution'),
        ),
        migrations.AddField(
            model_name='document',
            name='medium',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='medium', to='vocabs.SkosConcept', verbose_name='Medium'),
        ),
        migrations.AddField(
            model_name='document',
            name='place',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='places.Place', verbose_name='KG/Areal'),
        ),
        migrations.AddField(
            model_name='document',
            name='place_digizization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='place_digizization', to='documents.Institution', verbose_name='Ort der Digitalisierung'),
        ),
        migrations.AddField(
            model_name='document',
            name='reference',
            field=models.ManyToManyField(blank=True, to='bib.Book', verbose_name='Literaturzitate'),
        ),
        migrations.AddField(
            model_name='document',
            name='topic_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_group', to='vocabs.SkosConcept', verbose_name='Gruppe'),
        ),
    ]
